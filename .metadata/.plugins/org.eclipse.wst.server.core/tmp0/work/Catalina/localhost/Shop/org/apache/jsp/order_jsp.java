/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2022-12-03 06:50:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.text.*;

public final class order_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.text");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("\r\n");

	int total=Integer.parseInt(request.getParameter("total"));
	int count=Integer.parseInt(request.getParameter("count"));
	
	NumberFormat nf = NumberFormat.getNumberInstance();
	String totalstr = nf.format(total);


      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<SCRIPT language=\"javascript\">\r\n");
      out.write("	function check(f){\r\n");
      out.write("		blank = false;\r\n");
      out.write("		for(i=0; i<f.elements.length; i++){\r\n");
      out.write("			if(f.elements[i].value==\"\"){\r\n");
      out.write("				if(f.elements[i].name != \"number\")\r\n");
      out.write("					blank=true;\r\n");
      out.write("				if((f.elements[i].name==\"number\") && (f.pay.value==\"card\"))\r\n");
      out.write("					blank=true;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		if(blank==true)\r\n");
      out.write("			alert(\"모든 항목을 입력하셔야 합니다.\");\r\n");
      out.write("		else\r\n");
      out.write("			f.submit()\r\n");
      out.write("	}\r\n");
      out.write("</SCRIPT>\r\n");
      out.write("</HEAD>\r\n");
      out.write("\r\n");
      out.write("<BODY>\r\n");
      out.write("<P>\r\n");
      out.write("[<A href=\"sale_list.jsp\">장바구니 다시 보기</A>]\r\n");
      out.write("<FORM method=post action=\"order_save.jsp\">\r\n");
      out.write("<TABLE border=0 width=400>\r\n");
      out.write("	<TR>\r\n");
      out.write("		<TH bgcolor=#003399 colspan=2>\r\n");
      out.write("			<FONT size=+1 color=white>주문서 작성하기</FONT>\r\n");
      out.write("		</TH>\r\n");
      out.write("	</TR>\r\n");
      out.write("	<TR>\r\n");
      out.write("		<TH width=30% bgcolor=#0033cc>\r\n");
      out.write("			<FONT size=-1 color=white>이름</FONT>\r\n");
      out.write("		</TH>\r\n");
      out.write("		<TD bgcolor=#eeeeee>\r\n");
      out.write("			<INPUT type=text name=wname size=30>\r\n");
      out.write("		</TD>\r\n");
      out.write("	</TR>\r\n");
      out.write("	\r\n");
      out.write("	<TR>\r\n");
      out.write("		<TH width=30% bgcolor=#0033cc>\r\n");
      out.write("			<FONT size=-1 color=white>결제유형</FONT>\r\n");
      out.write("		</TH>\r\n");
      out.write("		<TD bgcolor=#eeeeee>\r\n");
      out.write("			<FONT size=-1>\r\n");
      out.write("				<INPUT type=radio name=pay value=\"card\">카드\r\n");
      out.write("				<INPUT type=radio name=pay value=\"cash\">온라인 입금				\r\n");
      out.write("			</FONT>\r\n");
      out.write("		</TD>\r\n");
      out.write("	</TR>\r\n");
      out.write("	\r\n");
      out.write("	<TR>\r\n");
      out.write("		<TH width=30% bgcolor=#0033cc>\r\n");
      out.write("			<FONT size=-1 color=white>카드번호</FONT>\r\n");
      out.write("		</TH>\r\n");
      out.write("		<TD bgcolor=#eeeeee>\r\n");
      out.write("			<INPUT type=text name=number size=30>\r\n");
      out.write("		</TD>\r\n");
      out.write("	</TR>\r\n");
      out.write("	\r\n");
      out.write("	<TR>\r\n");
      out.write("		<TH width=30% bgcolor=#0033cc>\r\n");
      out.write("			<FONT size=-1 color=white>배달주소</FONT>\r\n");
      out.write("		</TH>\r\n");
      out.write("		<TD bgcolor=#eeeeee>\r\n");
      out.write("			<INPUT type=text name=addr size=30>\r\n");
      out.write("		</TD>\r\n");
      out.write("	</TR>\r\n");
      out.write("	\r\n");
      out.write("	<TR>\r\n");
      out.write("		<TH width=30% bgcolor=#0033cc>\r\n");
      out.write("			<FONT size=-1 color=white>전화번호</FONT>\r\n");
      out.write("		</TH>\r\n");
      out.write("		<TD bgcolor=#eeeeee>\r\n");
      out.write("			<INPUT type=text name=tel size=30>\r\n");
      out.write("		</TD>\r\n");
      out.write("	</TR>\r\n");
      out.write("	\r\n");
      out.write("	<TR>\r\n");
      out.write("		<TH width=30% bgcolor=#0033cc>\r\n");
      out.write("			<FONT size=-1 color=white>주문 총 금액</FONT>\r\n");
      out.write("		</TH>\r\n");
      out.write("		<TD bgcolor=#eeeeee>\r\n");
      out.write("			");
      out.print(totalstr);
      out.write("원\r\n");
      out.write("		</TD>\r\n");
      out.write("	</TR>\r\n");
      out.write("	<TR>\r\n");
      out.write("		<TD colspan=2>\r\n");
      out.write("			<INPUT type=hidden name=total value=");
      out.print(total);
      out.write(">\r\n");
      out.write("			<INPUT type=hidden name=count value=");
      out.print(count);
      out.write(">\r\n");
      out.write("			<INPUT type=button value=\"확인\" onClick=\"check(this.form)\">\r\n");
      out.write("			<INPUT type=reset value=\"다시쓰기\">\r\n");
      out.write("		</TD>\r\n");
      out.write("	</TR>	\r\n");
      out.write("</TABLE>\r\n");
      out.write("</FORM>\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
